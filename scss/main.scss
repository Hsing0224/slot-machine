@import 'reset';

:root {
	--black: #000;
	--gray: #ccc;
	--white: #fff;
}

body {
	background-image: radial-gradient(circle at 10px 10px, #f4f4f4 5px, #fff 0);
  background-size: 30px 30px;
	font-size: 16px;
	opacity: 0;
	transition: opacity .3s ease-out;
	&.dataLoaded {
		opacity: 1;
	}
}

.container {
	height: 100vh;
	padding-block: 10vh;
	box-sizing: border-box;
}

#showBox {
	position: relative;
	width: 100%;
	height: 405px;
	margin-bottom: 5vh;
	overflow: hidden;
	opacity: 0;
	transition: opacity .3s ease-out;
	&.show {
		opacity: 1;
		&::before {
			transform: scaleY(1);
			transition-delay: 3s;
		}
	}
	&::before {
		content: '';
		position: absolute;
		top: 160px;
		left: 0;
		z-index: 1;
		width: 100%;
		height: 80px;
		background-color: var(--white);
		transform: scaleY(0);
		transform-origin: left center;
		mix-blend-mode: difference;
		transition: transform .3s ease-out;
	}
}

#questionList {
	position: absolute;
	bottom: 100%;
	left: 0;
	z-index: 2;
	width: 100%;
	mix-blend-mode: difference;
	&.animate {
		animation: questionShowAnimate 5s forwards ease-in-out .5s;
	}
	&.showAnswer {
		li {
			&:nth-child(3) {
				.text::before {
					opacity: 1;
				}
			}
		}
	}
	li {
		display: flex;
		justify-content: center;
		align-items: center;
		height: 80px;
	}
	.text {
		position: relative;
		font-weight: 700;
		font-size: 4rem;
		color: var(--white);
		&::before {
			content: attr(data-answer);
			position: absolute;
			top: 0;
			left: 0;
			height: 100%;
			display: flex;
			align-items: center;
			transform: translateX(-100%);
			white-space: nowrap;
			opacity: 0;
			transition: opacity .3s ease-out;
		}
	}
}

.playedBox {
	position: fixed;
	top: 0;
	left: 30px;
	z-index: 1;
	padding: 10px;
	ul {
		list-style: decimal;
		font-size: 1.2rem;
	}
	li {
		& + li {
			margin-top: 10px;
		}
	}
}

.buttonBox {
	display: flex;
	justify-content: center;
}

button {
	width: 20rem;
	padding: 1rem 2rem;
	font-size: 1.5rem;
	text-align: center;
	border: 1px solid var(--black);
	border-radius: 10rem;
	background-color: var(--white);
	transition: all .3s ease-in-out;
  cursor: pointer;
	&.disabled {
		cursor: default;
		border-color: var(--gray);
	}
}

#reset {
	margin-right: 20px;
	color: var(--black);
	background-color: var(--white);
	&.disabled {
		color: var(--gray);
		&:not(.disabled):hover {
			color: var(--white);
			background-color: var(--black);
		}
	}
}

#start, #answer {
	color: var(--white);
	background-color: var(--black);
	&.disabled {
		background-color: var(--gray);
	}
	&:not(.disabled):hover {
		color: var(--black);
		background-color: var(--white);
	}
}

#answer {
	display: none;
}

@keyframes questionShowAnimate {
	0% {
		transform: translateY(0);
	}
	100% {
		transform: translateY(100%);
	}
}